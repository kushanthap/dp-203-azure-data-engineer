{
	"name": "05 dedicated sql pool querying",
	"properties": {
		"folder": {
			"name": "dedicated sql pool"
		},
		"content": {
			"query": "SELECT  d.CalendarYear AS Year,\n        SUM(i.SalesAmount) AS InternetSalesAmount\nFROM FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nGROUP BY d.CalendarYear\nORDER BY Year;\n\n-- snowflake joins\nSELECT  d.CalendarYear AS Year,\n        d.MonthNumberOfYear as Month,\n        SUM(i.SalesAmount) AS InternetSalesAmount\nFROM FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nGROUP BY d.CalendarYear, d.MonthNumberOfYear\nORDER BY Year, Month; -- can use alias??\n\n\nSELECT  d.CalendarYear AS Year,\n        g.EnglishCountryRegionName as Region,\n        SUM(i.SalesAmount) AS InternetSalesAmount\nFROM FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nJOIN DimCustomer as c ON i.CustomerKey = c.CustomerKey\nJOIN DimGeography as g on c.GeographyKey = g.GeographyKey\nGROUP BY d.CalendarYear, g.EnglishCountryRegionName\nORDER BY Year, Region; -- can use alias??\n\n\nSELECT  d.CalendarYear AS Year,\n        pc.EnglishProductCategoryName AS ProductCategory,\n        g.EnglishCountryRegionName AS Region,\n        SUM(i.SalesAmount) AS InternetSalesAmount\nFROM FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nJOIN DimCustomer AS c ON i.CustomerKey = c.CustomerKey\nJOIN DimGeography AS g ON c.GeographyKey = g.GeographyKey\nJOIN DimProduct AS p ON i.ProductKey = p.ProductKey\nJOIN DimProductSubcategory AS ps ON p.ProductSubcategoryKey = ps.ProductSubcategoryKey\nJOIN DimProductCategory AS pc ON ps.ProductCategoryKey = pc.ProductCategoryKey\nGROUP BY d.CalendarYear, pc.EnglishProductCategoryName, g.EnglishCountryRegionName\nORDER BY Year, ProductCategory, Region;\n\n\n-- partitions\n    -- note there is no group by\nSELECT  g.EnglishCountryRegionName AS Region,\n        ROW_NUMBER() OVER(PARTITION BY g.EnglishCountryRegionName\n                          ORDER BY i.SalesAmount ASC) AS RowNumber,\n        i.SalesOrderNumber AS OrderNo,\n        i.SalesOrderLineNumber AS LineItem,\n        i.SalesAmount AS SalesAmount,\n        SUM(i.SalesAmount) OVER(PARTITION BY g.EnglishCountryRegionName) AS RegionTotal,\n        AVG(i.SalesAmount) OVER(PARTITION BY g.EnglishCountryRegionName) AS RegionAverage\nFROM FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nJOIN DimCustomer AS c ON i.CustomerKey = c.CustomerKey\nJOIN DimGeography AS g ON c.GeographyKey = g.GeographyKey\nWHERE d.CalendarYear = 2022\nORDER BY Region;\n\n\nSELECT  g.EnglishCountryRegionName AS Region,\n        g.City,\n        SUM(i.SalesAmount) AS CityTotal,\n        SUM(SUM(i.SalesAmount)) OVER(PARTITION BY g.EnglishCountryRegionName) AS RegionTotal,\n        RANK() OVER(PARTITION BY g.EnglishCountryRegionName\n                    ORDER BY SUM(i.SalesAmount) DESC) AS RegionalRank\nFROM FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nJOIN DimCustomer AS c ON i.CustomerKey = c.CustomerKey\nJOIN DimGeography AS g ON c.GeographyKey = g.GeographyKey\nGROUP BY g.EnglishCountryRegionName, g.City\nORDER BY Region;\n\n-- approximate count\nSELECT d.CalendarYear AS CalendarYear,\n    COUNT(DISTINCT i.SalesOrderNumber) AS Orders\nFROM FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nGROUP BY d.CalendarYear\nORDER BY CalendarYear;\n\nSELECT d.CalendarYear AS CalendarYear,\n    APPROX_COUNT_DISTINCT(i.SalesOrderNumber) AS Orders\nFROM FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nGROUP BY d.CalendarYear\nORDER BY CalendarYear;\n\n\n-- excercise \n\nSELECT  FiscalYear AS FiscalYear,\n        FiscalQuarter as FiscalQuarter,\n        SUM(OrderQuantity) OrderQuantity\nfrom FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\ngroup by FiscalYear, FiscalQuarter\n\nSELECT  FiscalYear AS FiscalYear,\n        FiscalQuarter as FiscalQuarter,\n        SalesTerritoryRegion as TerritoryRegion,\n        ps.ProductCategoryKey as ProductCategoryKey, \n        SUM(OrderQuantity) OrderQuantity\nfrom FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nJOIN DimSalesTerritory as t on i.SalesTerritoryKey = t.SalesTerritoryKey\nJOIN DimProduct AS p ON i.ProductKey = p.ProductKey\nJOIN DimProductSubcategory AS ps ON p.ProductSubcategoryKey = ps.ProductSubcategoryKey\nJOIN DimProductCategory AS pc ON ps.ProductCategoryKey = pc.ProductCategoryKey\ngroup by FiscalYear, FiscalQuarter, SalesTerritoryRegion, ps.ProductCategoryKey\n\nSELECT  FiscalYear AS FiscalYear,\n        SalesTerritoryRegion as TerritoryRegion,\n        RANK() OVER (PARTITION by FiscalYear order by SUM(SalesAmount)) as rank,\n        SUM(SalesAmount) totalSalesAmount\nfrom FactInternetSales AS i\nJOIN DimDate AS d ON i.OrderDateKey = d.DateKey\nJOIN DimSalesTerritory as t on i.SalesTerritoryKey = t.SalesTerritoryKey\ngroup by FiscalYear, SalesTerritoryRegion\norder by FiscalYear\n\n\n\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "sql9nlosdj",
				"poolName": "sql9nlosdj"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}